name: Terraform CI/CD

on:
  push:
    branches:
      - "feat/cd"
  pull_request:
    branches:
      - main
      - dev

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0 # Specify your Terraform version

      - name: Initialize Terraform
        run: terraform init

      - name: Validate Terraform Configuration
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan -out=tfplan

      - name: Apply Terraform Changes
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve tfplan

      - name: Retrieve Private Key from Terraform Output
        id: get_private_key
        run: echo "::set-output name=private_key::$(terraform output -raw private_key_pem)"

      # Example: Use SSH to deploy script to provisioned VM
      - name: Deploy Script to VM
        uses: appleboy/ssh-action@master
        with:
          host: ${{ steps.terraform.outputs.public_ip }}
          username: ubuntu # Replace with your instance's SSH username
          key: ${{ steps.get_private_key.outputs.private_key }}
          port: 22
          script: |
            sudo mv /tmp/script.sh /home/ubuntu/
            sudo chmod +x /home/ubuntu/script.sh
            sudo /home/ubuntu/script.sh

      - name: Destroy Infrastructure (Optional)
        if: github.event_name == 'pull_request'
        run: terraform destroy -auto-approve
