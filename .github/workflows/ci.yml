name: Pipeline CI

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: Back

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run the docker-compose
        run: docker compose up -d
        if: success()

      - name: sleep 30
        run: sleep 30

      - name: docker compose ps
        run: docker compose ps

      - name: docker compose logs
        run: docker compose logs golang


      - name: Run tests inside the container
        run: |
          sleep 30
          docker-compose exec -T golang go test tests/utils.go tests/register_test.go
          docker-compose exec -T golang go test tests/utils.go tests/login_test.go
          docker-compose exec -T golang go test tests/utils.go tests/colocation_test.go
          docker-compose exec -T golang go test tests/utils.go tests/featureFlag_test.go
          docker-compose exec -T golang go test tests/utils.go tests/colocMember_test.go
          docker-compose exec -T golang go test tests/utils.go tests/invitation_test.go
          docker-compose exec -T golang go test tests/jwt_unitary_test.go
