name: Terraform CI/CD

on:
  push:
    branches:
      - "feat/cd"
  pull_request:
    branches:
      - main
      - dev

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Initialize Terraform
        run: |
          cd terraform
          terraform init

      - name: Validate Terraform Configuration
        run: |
          cd terraform
          terraform validate

      - name: Terraform Plan
        id: plan
        run: |
          cd terraform
          terraform plan -out=tfplan

      - name: Apply Terraform Changes
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          cd terraform
          terraform apply -auto-approve tfplan

      - name: Retrieve Private Key from Terraform Output
        id: get_private_key
        run: |
          cd terraform
          echo "$(terraform output -raw private_key_pem)" > private_key.pem
          echo "$(terraform output -raw public_ip)" > public_ip.txt

      - name: Set environment variables from Terraform output
        run: |
          echo "PRIVATE_KEY=$(cat terraform/private_key.pem)" >> $GITHUB_ENV
          echo "PUBLIC_IP=$(cat terraform/public_ip.txt)" >> $GITHUB_ENV

      - name: Deploy Script to VM
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.PUBLIC_IP }}
          username: ubuntu # Replace with your instance's SSH username
          key: ${{ env.PRIVATE_KEY }}
          port: 22
          script: |
            sudo mv /tmp/script.sh /home/ubuntu/
            sudo chmod +x /home/ubuntu/script.sh
            sudo /home/ubuntu/script.sh

      - name: Destroy Infrastructure (Optional)
        if: github.event_name == 'pull_request'
        run: |
          cd terraform
          terraform destroy -auto-approve
